"use strict";(self.__LOADABLE_LOADED_CHUNKS__=self.__LOADABLE_LOADED_CHUNKS__||[]).push([[5176],{75176:(t,e,r)=>{r.d(e,{K:()=>h});class n extends Error{}class s extends Error{}class i extends Error{}class l extends Error{}class o extends Error{}class c extends Error{}class a extends Error{}const u=/([0-9]{1,2})?:?([0-9]{2}):([0-9]{2}\.[0-9]{2,3})/,h=(t,e)=>{if(!t||"string"!=typeof t)return{cues:[]};e||(e={});const{meta:r=!1,strict:u=!0}=e,h=(t=(t=(t=t.trim()).replace(/\r\n/g,"\n")).replace(/\r/g,"\n")).split("\n\n"),w=h.shift();if(!(null==w?void 0:w.startsWith("WEBVTT")))throw new n('Must start with "WEBVTT"');const m=w.split("\n"),p=m[0].replace("WEBVTT","");if(p.length>0&&" "!==p[0]&&"\t"!==p[0])throw new s("Header comment must start with space or tab");if(0===h.length&&1===m.length)return{valid:!0,strict:u,cues:[],errors:[]};if(!r&&m.length>1&&""!==m[1])throw new i("Missing blank line after signature");const{cues:g,errors:E}=function(t,e){const r=[];return{cues:t.map(((t,n)=>{try{return function(t,e,r){let n=0,s=.01,i="";const u=t.split("\n").filter(Boolean);if(u.length>0&&u[0].trim().startsWith("NOTE"))return null;if(1===u.length&&!u[0].includes("--\x3e"))throw new l(`Cue identifier cannot be standalone (cue #${e})`);if(u.length>1&&!u[0].includes("--\x3e")&&!u[1].includes("--\x3e"))throw new o(`Cue identifier needs to be followed by timestamp (cue #${e})`);const h=u[0].split(" --\x3e ");if(2!==h.length||!f(h[0])||!f(h[1]))throw new c(`Invalid cue timestamp (cue #${e})`);const w=function(t){const e=t.split(".")[0],r=e.split(":");return"00"!==r[0]?e:`${r[1]}:${r[2]}`}(h[0]);if(n=d(h[0]),s=d(h[1]),r){if(n>s)throw new a(`Start timestamp greater than end (cue #${e})`);if(s<=n)throw new a(`End must be greater than start (cue #${e})`)}if(!r&&s<n)throw new a(`End must be greater or equal to start when not strict (cue #${e})`);return u.shift(),i=u.join("\n"),!!i&&{start:n,end:s,text:i,startStr:w}}(t,n,e)}catch(t){return r.push(t),null}})).filter(Boolean),errors:r}}(h,u);if(u&&E.length>0)throw E[0];const x=r?function(t){const e={};return t.slice(1).forEach((t=>{const r=t.indexOf(":"),n=t.slice(0,r).trim(),s=t.slice(r+1).trim();e[n]=s})),Object.keys(e).length>0?e:null}(m):null,_={valid:0===E.length,strict:u,cues:g,errors:E,meta:{}};return r&&x&&(_.meta=x),_};function f(t){return u.test(t)}function d(t){const e=t.match(u);let r=60*parseFloat(e[1]||"0")*60;return r+=60*parseFloat(e[2]),r+=parseFloat(e[3]),Number(r.toFixed(6))}}}]);